{
  
    
        "post0": {
            "title": "Fetch of Backend Jokes",
            "content": "Joke HaHa Boohoo .",
            "url": "https://b-g101.github.io/BASE/data/jokes",
            "relUrl": "/data/jokes",
            "date": " • Oct 23, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Clothing Store",
            "content": "Skip to Content ↵ENTER Skip to Menu ↵ENTER Skip to Footer ↵ENTER Skip to content . . . . Search . . . SIGN IN | JUST IN . | BASICS TANKS . | T-SHIRTS . | BOTTOMS . | . | CLOTHING VIEW ALL . | SWEATPANTS &amp; SWEATSHIRTS . | SWEATERS COTTON | CARDIGANS | WOOL | . | TOPS . | BOTTOMS JEANS | PANTS | SHORTS &amp; SKIRTS | . | JACKETS . | CARGO . | STRIPES . | MATCHING SETS . | INTIMATES . | DRESSES . | . | GRAPHICS VIEW ALL . | GRAPHICS SWEATS . | GRAPHICS TEES . | . | ACCESSORIES VIEW ALL . | JEWELRY . | BAGS &amp; BACKPACKS . | BELTS . | HAIR ACCESSORIES . | SOCKS . | HATS &amp; CAPS . | . | | CUSTOMER SERVICE | LOCATIONS | FOR CA RESIDENTS | &lt;/ul&gt; &lt;/nav&gt; . . Instagram | . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/details&gt; &lt;/header-drawer&gt; MORE COUNTRIES . . . Search . SIGN IN Service menu CUSTOMER SERVICE | LOCATIONS | FOR CA RESIDENTS | . . . Cart &lt;/header&gt; JUST IN | BASICS TANKS | T-SHIRTS | BOTTOMS | . | CLOTHING VIEW ALL | SWEATPANTS &amp; SWEATSHIRTS | SWEATERS . COTTON | CARDIGANS | WOOL | . | TOPS | BOTTOMS . JEANS | PANTS | SHORTS &amp; SKIRTS | . | JACKETS | CARGO | STRIPES | MATCHING SETS | INTIMATES | DRESSES | . | GRAPHICS VIEW ALL | GRAPHICS SWEATS | GRAPHICS TEES | . | ACCESSORIES VIEW ALL | JEWELRY | BAGS &amp; BACKPACKS | BELTS | HAIR ACCESSORIES | SOCKS | HATS &amp; CAPS | . | GIFT CARDS | &lt;/nav&gt; &lt;/div&gt; . &lt;/sticky-header&gt; . Item added to your cart . CHECKOUT Continue shopping &lt;/div&gt; CLOTHING . Agatha Denim Jeans Agatha Denim Jeans Regular price $40 Regular price Sale price $40 Unit price / &nbsp;per&nbsp; | Paige V-Neck Top Paige V-Neck Top Regular price $24 Regular price Sale price $24 Unit price / &nbsp;per&nbsp; . | Hayley Overalls Hayley Overalls Regular price $55 Regular price Sale price $55 Unit price / &nbsp;per&nbsp; | Evelyn Thick Stripe Top Evelyn Thick Stripe Top Regular price $35 Regular price Sale price $35 Unit price / &nbsp;per&nbsp; . | Zelly Basic Top Zelly Basic Top Regular price $16 Regular price Sale price $16 Unit price / &nbsp;per&nbsp; | Zelly Top Zelly Top Regular price $18 Regular price Sale price $18 Unit price / &nbsp;per&nbsp; | Ronnie Floral Lace Tank Ronnie Floral Lace Tank Regular price $18 Regular price Sale price $18 Unit price / &nbsp;per&nbsp; . | Faith Reversible Puffer Jacket Faith Reversible Puffer Jacket Regular price $58 Regular price Sale price $58 Unit price / &nbsp;per&nbsp; . | Zelly Stripe Top Zelly Stripe Top Regular price $20 Regular price Sale price $20 Unit price / &nbsp;per&nbsp; | Christy Hoodie Christy Hoodie Regular price $42 Regular price Sale price $42 Unit price / &nbsp;per&nbsp; . | Billie Cotton Cardigan Billie Cotton Cardigan Regular price $35 Regular price Sale price $35 Unit price / &nbsp;per&nbsp; | Evelyn Thick Stripe Top Evelyn Thick Stripe Top Regular price $35 Regular price Sale price $35 Unit price / &nbsp;per&nbsp; | Erica Oversized Sweatshirt Erica Oversized Sweatshirt Regular price $32 Regular price Sale price $32 Unit price / &nbsp;per&nbsp; . | Brielle 90&#39;s Jeans Brielle 90&#39;s Jeans Regular price $42 Regular price Sale price $42 Unit price / &nbsp;per&nbsp; . | Dalis Cropped Tank Dalis Cropped Tank Regular price $16 Regular price Sale price $16 Unit price / &nbsp;per&nbsp; | Bella Top Bella Top Regular price From $18 Regular price Sale price From $18 Unit price / &nbsp;per&nbsp; | Floral Bow Underwear Floral Bow Underwear Regular price $7 Regular price Sale price $7 Unit price / &nbsp;per&nbsp; | Boy Short Stripe Underwear Boy Short Stripe Underwear Regular price $10 Regular price Sale price $10 Unit price / &nbsp;per&nbsp; | Alex Denim Jacket Alex Denim Jacket Regular price $50 Regular price Sale price $50 Unit price / &nbsp;per&nbsp; | Bella Ribbed Top Sold out Bella Ribbed Top Regular price $18 Regular price Sale price $18 Unit price / &nbsp;per&nbsp; | . SHOPPING BAG . Order Today and Expect your Delivery by: . October 29, 2022 - November 1, 2022 . Subtotal: $0.00 Estimated Total: $0.00 CHECKOUT YOUR SHOPPING BAG IS EMPTY . For CA Residents | © 2022, BASE Choosing a selection results in a full page refresh. | . . . English Accessibility Adjustments Reset Settings Statement Hide Interface Choose the right accessibility profile for you OFF ON Seizure Safe Profile Clear flashes &amp; reduces color This profile enables epileptic and seizure prone users to browse safely by eliminating the risk of seizures that result from flashing or blinking animations and risky color combinations. OFF ON Vision Impaired Profile Enhances website&#39;s visuals This profile adjusts the website, so that it is accessible to the majority of visual impairments such as Degrading Eyesight, Tunnel Vision, Cataract, Glaucoma, and others. OFF ON ADHD Friendly Profile More focus &amp; fewer distractions This profile significantly reduces distractions, to help people with ADHD and Neurodevelopmental disorders browse, read, and focus on the essential elements of the website more easily. OFF ON Cognitive Disability Profile Assists with reading &amp; focusing This profile provides various assistive features to help users with cognitive disabilities such as Autism, Dyslexia, CVA, and others, to focus on the essential elements of the website more easily. OFF ON Keyboard Navigation (Motor) Use website with the keyboard This profile enables motor-impaired persons to operate the website using the keyboard Tab, Shift+Tab, and the Enter keys. Users can also use shortcuts such as “M” (menus), “H” (headings), “F” (forms), “B” (buttons), and “G” (graphics) to jump to specific elements.Note: This profile prompts automatically for keyboard users. OFF ON Blind Users (Screen Reader) Optimize website for screen-readers This profile adjusts the website to be compatible with screen-readers such as JAWS, NVDA, VoiceOver, and TalkBack. A screen-reader is software that is installed on the blind user’s computer and smartphone, and websites should ensure compatibility with it. Note: This profile prompts automatically to screen-readers. Content Adjustments Content Scaling Default Readable Font Highlight Titles Highlight Links Text Magnifier Adjust Font Sizing Default Align Center Align Left Adjust Line Height Default Adjust Letter Spacing Default Align Right Color Adjustments Dark Contrast Light Contrast High Contrast High Saturation Adjust Text Colors Cancel Monochrome Low Saturation Adjust Title Colors Cancel Adjust Background Colors Cancel Orientation Adjustments Mute Sounds Hide Images Read Mode Reading Guide Useful Links Select an option Home Header Footer Main Content Stop Animations Reading Mask Highlight Hover Highlight Focus Big Black Cursor Big White Cursor HIDDEN_ADJUSTMENTS Keyboard Navigation Accessible Mode Screen Reader Adjustments Read Mode Web Accessibility By Learn More Choose the Interface Language English Español Deutsch Português Français Italiano עברית 繁體中文 Pусский عربى عربى Nederlands 繁體中文 日本語 Polski Türk Accessibility StatementCompliance status We firmly believe that the internet should be available and accessible to anyone and are committed to providing a website that is accessible to the broadest possible audience, regardless of ability. . To fulfill this, we aim to adhere as strictly as possible to the World Wide Web Consortium’s (W3C) Web Content Accessibility Guidelines 2.1 (WCAG 2.1) at the AA level. These guidelines explain how to make web content accessible to people with a wide array of disabilities. Complying with those guidelines helps us ensure that the website is accessible to blind people, people with motor impairments, visual impairment, cognitive disabilities, and more. . This website utilizes various technologies that are meant to make it as accessible as possible at all times. We utilize an accessibility interface that allows persons with specific disabilities to adjust the website’s UI (user interface) and design it to their personal needs. . Additionally, the website utilizes an AI-based application that runs in the background and optimizes its accessibility level constantly. This application remediates the website’s HTML, adapts its functionality and behavior for screen-readers used by blind users, and for keyboard functions used by individuals with motor impairments. . If you wish to contact the website’s owner please use the website&#39;s form . Screen-reader and keyboard navigation Our website implements the ARIA attributes (Accessible Rich Internet Applications) technique, alongside various behavioral changes, to ensure blind users visiting with screen-readers can read, comprehend, and enjoy the website’s functions. As soon as a user with a screen-reader enters your site, they immediately receive a prompt to enter the Screen-Reader Profile so they can browse and operate your site effectively. Here’s how our website covers some of the most important screen-reader requirements: . Screen-reader optimization:&nbsp;we run a process that learns the website’s components from top to bottom, to ensure ongoing compliance even when updating the website. In this process, we provide screen-readers with meaningful data using the ARIA set of attributes. For example, we provide accurate form labels; descriptions for actionable icons (social media icons, search icons, cart icons, etc.); validation guidance for form inputs; element roles such as buttons, menus, modal dialogues (popups), and others.&nbsp;Additionally, the background process scans all of the website’s images. It provides an accurate and meaningful image-object-recognition-based description as an ALT (alternate text) tag for images that are not described. It will also extract texts embedded within the image using an OCR (optical character recognition) technology. To turn on screen-reader adjustments at any time, users need only to press the Alt+1 keyboard combination. Screen-reader users also get automatic announcements to turn the Screen-reader mode on as soon as they enter the website.These adjustments are compatible with popular screen readers such as JAWS, NVDA, VoiceOver, and TalkBack. | Keyboard navigation optimization:&nbsp;The background process also adjusts the website’s HTML and adds various behaviors using JavaScript code to make the website operable by the keyboard. This includes the ability to navigate the website using the Tab and Shift+Tab keys, operate dropdowns with the arrow keys, close them with Esc, trigger buttons and links using the Enter key, navigate between radio and checkbox elements using the arrow keys, and fill them in with the Spacebar or Enter key.Additionally, keyboard users will find content-skip menus available at any time by clicking Alt+2, or as the first element of the site while navigating with the keyboard. The background process also handles triggered popups by moving the keyboard focus towards them as soon as they appear, not allowing the focus to drift outside.Users can also use shortcuts such as “M” (menus), “H” (headings), “F” (forms), “B” (buttons), and “G” (graphics) to jump to specific elements. | Disability profiles supported on our website Epilepsy Safe Profile: this profile enables people with epilepsy to safely use the website by eliminating the risk of seizures resulting from flashing or blinking animations and risky color combinations. | Vision Impaired Profile: this profile adjusts the website so that it is accessible to the majority of visual impairments such as Degrading Eyesight, Tunnel Vision, Cataract, Glaucoma, and others. | Cognitive Disability Profile: this profile provides various assistive features to help users with cognitive disabilities such as Autism, Dyslexia, CVA, and others, to focus on the essential elements more easily. | ADHD Friendly Profile: this profile significantly reduces distractions and noise to help people with ADHD, and Neurodevelopmental disorders browse, read, and focus on the essential elements more easily. | Blind Users Profile (Screen-readers): this profile adjusts the website to be compatible with screen-readers such as JAWS, NVDA, VoiceOver, and TalkBack. A screen-reader is installed on the blind user’s computer, and this site is compatible with it. | Keyboard Navigation Profile (Motor-Impaired): this profile enables motor-impaired persons to operate the website using the keyboard Tab, Shift+Tab, and the Enter keys. Users can also use shortcuts such as “M” (menus), “H” (headings), “F” (forms), “B” (buttons), and “G” (graphics) to jump to specific elements. | . Additional UI, design, and readability adjustments Font&nbsp;adjustments –&nbsp;users can increase and decrease its size, change its family (type), adjust the spacing,&nbsp;alignment, line height,&nbsp;and more. | Color&nbsp;adjustments –&nbsp;users can select various color contrast profiles such as light, dark, inverted, and monochrome. Additionally, users can swap color schemes of titles, texts, and backgrounds with over seven different coloring options. | Animations –&nbsp;epileptic users can stop all running animations with the click of a button. Animations controlled by the interface include videos, GIFs, and CSS flashing transitions. | Content&nbsp;highlighting –&nbsp;users can choose to emphasize essential elements such as links and titles. They can also choose to highlight focused or hovered elements only. | Audio muting&nbsp;–&nbsp;users with hearing devices may experience headaches or other issues due to automatic audio playing. This option lets users mute the entire website instantly. | Cognitive&nbsp;disorders –&nbsp;we utilize a search engine linked to Wikipedia and Wiktionary, allowing people with cognitive disorders to decipher meanings of phrases, initials, slang, and others. | Additional functions&nbsp;– we allow users to change cursor color and size, use a printing mode, enable a virtual keyboard, and many other functions. | Assistive technology and browser compatibility We aim to support as many browsers and assistive technologies as possible, so our users can choose the best fitting tools for them, with as few limitations as possible. Therefore, we have worked very hard to be able to support all major systems that comprise over 95% of the user market share, including Google Chrome, Mozilla Firefox, Apple Safari, Opera and Microsoft Edge, JAWS, and NVDA (screen readers), both for Windows and MAC users. . Notes, comments, and feedback Despite our very best efforts to allow anybody to adjust the website to their needs, there may still be pages or sections that are not fully accessible, are in the process of becoming accessible, or are lacking an adequate technological solution to make them accessible. Still, we are continually improving our accessibility, adding, updating, improving its options and features, and developing and adopting new technologies. All this is meant to reach the optimal level of accessibility following technological advancements. If you wish to contact the website’s owner, please use the website&#39;s form . Hide Accessibility Interface? Please note: If you choose to hide the accessibility interface, you won&#39;t be able to see it anymore, unless you clear your browsing history and data. Are you sure that you wish to hide the interface? Accept Cancel Continue Processing the data, please give it a few seconds... &lt;/body&gt; | . | .",
            "url": "https://b-g101.github.io/BASE/2022/10/23/Clothing-Store.html",
            "relUrl": "/2022/10/23/Clothing-Store.html",
            "date": " • Oct 23, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "DevOps Process",
            "content": "What is Continuous Integration: . Continuous integration (CI) is the practice of automating the integration of code changes from multiple contributors into a single software project. It’s a primary DevOps best practice, allowing developers to frequently merge code changes into a central repository where builds and tests then run. Automated tools are used to assert the new code’s correctness before integration. . A source code version control system is the crux of the CI process. The version control system is also supplemented with other checks like automated code quality tests, syntax style review tools, and more. . It allows for faster feedback, allows to fix bugs quickly, and so forth. . . What is Continuous Delivery: . A continuous delivery pipeline could have a manual gate right before production. A manual gate requires human intervention, and there could be scenarios in your organization that require manual gates in pipelines. Some manual gates might be questionable, whereas some could be legitimate. One legitimate scenario allows the business team to make a last-minute release decision. The engineering team keeps a shippable version of the product ready after every sprint, and the business team makes the final call to release the product to all customers, or a cross-section of the population, or perhaps to people who live in a certain geographical location. . Essentiallly, we want to make sure our work is going out to the internet, and is being deployed. It makes sure the programmer’s code is being delivered to multiple applications. . We can use any third pary softwares to deploy. The most common one is AWS. . . Proof of currently being deployed: . Most modern software development teams practice a pull request and code review workflow. Pull requests are a critical practice to effective CI. A pull request is created when a developer is ready to merge new code into the main codebase. The pull request notifies other developers of the new set of changes that are ready for integration. . Pull requests are an opportune time to kick off the CI pipeline and run the set of automated approval steps. An additional, manual approval step is commonly added at pull request time, during which a non-stakeholder engineer performs a code review of the feature. This allows for a fresh set of eyes to review the new code and functionality. The non-stakeholder will make edit suggestions and approve or deny the pull request. . Pull requests and code review are a powerful tool to foster passive communication and knowledge share among an engineering team. This helps guard against technical debt in the form of knowledge silos, where specific engineers are the only stakeholders for certain features of a code base. . We espeacially use GitHub to follow these functions. Pull requests let you tell others about changes you’ve pushed to a branch in a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow-up commits before your changes are merged into the base branch. . Benefits of Pull Request Workflow . Clean git history - by using pull request, we can easily squash those redundant / unimportant / unclear commits before merging into main branch. | Remote code review process - before pull request, we did code review face to face either by pair programming or code presentation session. | Better software quality - making pull request means that the feature need to be approved by captain / lead and QA / QC. | . We haven’t used pull requests yet, however, we will be implementing them as we further develop our website. . GitHub Branches Strategies . Branches allow you to develop features, fix bugs, or safely experiment with new ideas in a contained area of your repository. You always create a branch from an existing branch. Typically, you might create a new branch from the default branch of your repository. You can then work on this new branch in isolation from changes that other people are making to the repository. . . Once we are done with the work, we can open a pull request to merge the changes in the current branch (the head branch) into another branch. . After a pull request has been merged, or closed, you can delete the head branch as this is no longer needed. You must have write access in the repository to delete branches. You can’t delete branches that are directly associated with open pull requests. . . Our Deployment Process . Software deployment plan To make sure the deployment process goes as smoothly as possible it is best to have a deployment plan that we follow. By having a plan you ensure that everything is done the same way each time changes are made. A deployment plan should include rules for when to deploy from local environments to development or staging sites as well as schedules for when new changes can go to a live environment. By having a set plan you reduce the risk of conflicts between different changes and make sure the deployment process is as smooth and easy as possible. If you’re working on an open-source project it also gives you the chance to do Release Candidates and let your community test it out for any bugs you might have missed yourself. Besides an overall plan, it’s also important to plan each individual change that you’re going to do. This process will be very quick for minor changes but should be much more extensive for big changes. By planning well in advance, you’re much better suited to have a smooth deployment process. . | The actual development Once you have the plan in place, it’s time to do the actual development. To ensure that any development can be done simultaneously and without breaking anything, it’s important to only work on local or development environments. . | Testing your changes Testing your changes is crucial to ensure that no bugs make it into the final production environment. But testing cannot be completed without deploying your changes to new environments. Once you’ve tested that all of your changes work on your local or development environment we deploy the changes to the next environment in line. This should be done all the way up to your staging environment, where final QA testing should be done. If everything is properly tested and works in an environment resembling your live environment it’s time to deploy it live. . | Deploying changes to the live environment Once all of the testing has been done on previous environments and any bugs have been fixed, it’s time to deploy your changes to the live environment. This should be a pretty safe thing to do, but everyone who’s worked with software development knows, that something can still go wrong. . | Monitor your changes Once your new changes are live and real users are actively using your website or application, it’s important to monitor that everything works as intended. No matter the planning put forward, there’s a chance that users encounter issues or perform actions that you did not anticipate during your planning and development. If we do need to roll back your changes, it’s important to keep calm and have a process to handle that as thoroughly as we handle deployments. . | . Clothing API . Here is how we are explaining the API: . Imagine you’re a customer at a restaurant. The waiter (the API) functions as an intermediary between customers like you (the user) and the kitchen (web server). You tell the waiter your order (API call), and the waiter requests it from the kitchen. Finally, the waiter will provide you with what you ordered. . . We mainly use RESTful APIs: . REST, or “representational state transfer,” is a type of software design that gives access to data (aka “web resources”) by using a uniform and predefined set of operations. The payload - the data to be delivered - defined in the request itself, will be formatted in a language such as HTML, JSON, or XML. The set of operations are the methods available to HTTP, which is the underlying protocol for how browsers retrieve websites from servers. These methods include GET, POST, PUT, DELETE, and others. . Obviously, our RESTful API gets and posts data from the internet through HTTP. This is explained in further detail by Bria. . .",
            "url": "https://b-g101.github.io/BASE/markdown/2022/10/22/devops.html",
            "relUrl": "/markdown/2022/10/22/devops.html",
            "date": " • Oct 22, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Project Wireframe",
            "content": "Project Idea . site revolving around online shopping and style guides it can have tools that help search | input favorite stores, and it will notify everytime there is new stock or when items on the wishlist are available | image search thing to find similar clothes using pixel finder | . | . Our Why: . help other teens their age find their style | fashion helps boosts people confidence when they wear what they want and feel good in it | We want to promote more positivitiy on campus through highlighting different styles | picked this idea because there could be a lot of database usage which will challenge us more than just frontend coding | We want to challenge ourselves by using more APIs and we think that this idea could include a lot of them | . . Wireframe . .",
            "url": "https://b-g101.github.io/BASE/markdown/2022/09/26/wireframes.html",
            "relUrl": "/markdown/2022/09/26/wireframes.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Calculator Starters",
            "content": "| Overview | Calculator | Snake Game | . 0 1 2 3 + 4 5 6 - 7 8 9 * A/C 0 . / √ sin cos tan 3√ e^ =",
            "url": "https://b-g101.github.io/BASE/frontend/calculator",
            "relUrl": "/frontend/calculator",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Regular Menu and GUI Menu",
            "content": "// imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;red&quot;, &quot; u001B[31m&quot;}, {&quot;green&quot;, &quot; u001B[32m&quot;}, {&quot;yellow&quot;, &quot; u001B[33m&quot;}, {&quot;blue&quot;, &quot; u001B[34m&quot;}, {&quot;purple&quot;, &quot; u001B[35m&quot;}, {&quot;cyan&quot;, &quot; u001B[36m&quot;}, {&quot;white&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - color names&quot;); System.out.println(&quot;3 - aadya in different colors&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;bye!!&quot;); quit = true; break; case 1: System.out.print(&quot;hello!!!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 20; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;AADYA &quot;); } break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . - Choose from these choices - 1 - Say Hello 2 - color names 3 - aadya in different colors 0 - Quit - 1: hello!!! 2: Defaultredgreenyellowbluepurplecyanwhite 3: Loading...AADYA AADYA AADYA AADYA AADYA AADYA AADYA AADYA AADYA AADYA AADYA AADYA AADYA AADYA AADYA AADYA AADYA AADYA AADYA AADYA 4: Unexpected choice, try again. 0: bye!! . import java.awt.*; import java.awt.event.*; import javax.swing.*; import java.util.Timer; import java.util.TimerTask; // Graphical-User-Interface for Desktop in Java using Java Swing. public class MenuJFrame extends JFrame implements ActionListener { private JFrame frame; private JMenuBar menubar; private JMenu menu; private JLabel message = new JLabel(&quot;Click on Menu to select an action.&quot;); public final String[] MENUS = { // 1D Array of Menu Choices &quot;Hello&quot;, &quot;Colors&quot;, &quot;Loading bar&quot;, }; // Statics to assist with timer and messaging, single copy (no instance) private static int delay = 20; private static int step = 1; private static String hashes = &quot;&quot;; // Constructor enables the Frame instance, the object &quot;this.frame&quot; public MenuJFrame(String title) { // Initializing Key Objects frame = new JFrame(title); menubar = new JMenuBar(); menu = new JMenu(&quot;Menu&quot;); // Initializing Menu objects and adding actions for (String mx : MENUS) { JMenuItem m = new JMenuItem(mx); m.addActionListener(this); menu.add(m); } // Adding / Connecting Objects menubar.add(menu); frame.setJMenuBar(menubar); frame.add(message); // Sets JFrame close operation to Class variable JFrame.EXIT_ON_CLOSE frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // set the size of window based on objects frame.setSize(300,200); // makes the frame object visible according to properties previously set frame.setVisible(true); // flow of control shifts to frame object } // event from user selecting a menu option public void actionPerformed(ActionEvent e) { // local variable to ActinEvent String selection = e.getActionCommand(); // menu selection String msg; // local variable to create response from action final String[] COLORS = {&quot;Red&quot;, &quot;Green&quot;, &quot;Blue&quot;}; // add more colors here final String start_msg = &quot;&lt;html&gt;&quot;; // html building final String end_msg = &quot;&lt;/html&gt;&quot;; final String hash = &quot;#&quot;; // run code based on the menuItem that was selected if ( selection.equals(MENUS[0]) ) { // Hello Action msg = &quot;Hello, World&quot;; message.setText(msg); } else if ( selection.equals(MENUS[1]) ) { // Color Action msg = start_msg + &quot;&lt;p&gt;&quot; + selection + &quot;&lt;/p&gt;&quot;; for (String color : COLORS) { msg += &quot;&lt;font color=&quot; + color + &quot;&gt;&quot; + color + &quot; &lt;/font&gt;&quot;; } msg += end_msg; message.setText(msg); } else { // Loading Bar Action String loading = &quot;&lt;p&gt;Loading&lt;/p&gt;&quot;; // Code to run on a Timer Timer timer = new Timer(); TimerTask task = new TimerTask() { public void run() { // Method for TimerTask // Static and Local variables used to manage message building int random = (int) (Math.random() * COLORS.length); // random logic MenuJFrame.hashes += &quot;&lt;font color=&quot; + COLORS[random] + &quot;&gt;&quot; + hash + &quot;&lt;/font&gt;&quot;; String msg = start_msg + loading + hashes + end_msg; message.setText(msg); // Shutdown timer and reset data if(MenuJFrame.step++ &gt; MenuJFrame.delay) { MenuJFrame.step = 1; MenuJFrame.hashes=&quot;&quot;; timer.cancel(); } }; }; // Schedule task and interval timer.schedule(task, 200, 200); message.setText(start_msg + loading + hash + end_msg); // prime/initial display } } // Driver turn over control the GUI public static void main(String[] args) { // Activates an instance of MenuJFrame class, which makes a JFrame object new MenuJFrame(&quot;Menu&quot;); } } MenuJFrame.main(null); . System.out.println(&quot;hi&quot;) //testing if cells after the GUI menu runs succesfully after loading the menu // executed with state Success . hi .",
            "url": "https://b-g101.github.io/BASE/2022/09/03/menus.html",
            "relUrl": "/2022/09/03/menus.html",
            "date": " • Sep 3, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Snake Game",
            "content": "| Overview | Calculator | Snake Game | . . Snake Game . Score: 0 New Game .",
            "url": "https://b-g101.github.io/BASE/frontend/snake_game",
            "relUrl": "/frontend/snake_game",
            "date": " • Sep 2, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://b-g101.github.io/BASE/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://b-g101.github.io/BASE/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Frontend Hacks",
          "content": "| Overview | Calculator | Snake Game | . This is page where we can work on frontend pages like our Snake Game and the Math Class calculator. . Snake Game . Backend Language: Java | serve as an administrative UI for backend developers | snake game works on the Fastpages due to the GUI built | . Math Calculator . made using the Math class | there are different functions within the math class that produce different outputs | useful for us as we are in school and use calculators for many different things | unique interface with different types of math calculators | . More to Come! .",
          "url": "https://b-g101.github.io/BASE/frontend/overview",
          "relUrl": "/frontend/overview",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://b-g101.github.io/BASE/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}